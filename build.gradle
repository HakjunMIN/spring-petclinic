plugins {
  id 'java'
  id 'org.springframework.boot' version '3.1.1'
  id 'io.spring.dependency-management' version '1.1.0'
  id 'org.graalvm.buildtools.native' version '0.9.23'
  id 'jacoco'
}

apply plugin: 'java'

group = 'org.springframework.samples'
version = '3.1.0'
sourceCompatibility = '17'

repositories {
  mavenCentral()
}

ext.webjarsFontawesomeVersion = "4.7.0"
ext.webjarsBootstrapVersion = "5.2.3"

dependencies {
  implementation 'org.springframework.boot:spring-boot-starter-cache'
  implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
  implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
  implementation 'org.springframework.boot:spring-boot-starter-web'
  implementation 'org.springframework.boot:spring-boot-starter-validation'
  implementation 'javax.cache:cache-api'
  implementation 'jakarta.xml.bind:jakarta.xml.bind-api'
  runtimeOnly 'org.springframework.boot:spring-boot-starter-actuator'
  runtimeOnly "org.webjars.npm:bootstrap:${webjarsBootstrapVersion}"
  runtimeOnly "org.webjars.npm:font-awesome:${webjarsFontawesomeVersion}"
  runtimeOnly 'com.github.ben-manes.caffeine:caffeine'
  runtimeOnly 'com.h2database:h2'
  runtimeOnly 'com.mysql:mysql-connector-j'
  runtimeOnly 'org.postgresql:postgresql'
  developmentOnly 'org.springframework.boot:spring-boot-devtools'
  testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
  useJUnitPlatform()
  finalizedBy jacocoTestReport
}

jacocoTestReport {
	classDirectories.setFrom fileTree(dir: "build/classes/java/main/").exclude('').include('')
}
// jacocoTestReport {
//     doFirst {
//         // The JaCoCo plugin adds a JacocoTaskExtension extension to all tasks of type Test.
//         // Use task state to include or not task execution data 
//         // https://docs.gradle.org/current/javadoc/org/gradle/api/tasks/TaskState.html
//         executionData tasks.withType(Test).findAll { it.state.executed }
//     }
//     // reports {
//     //     xml.enabled true
//     //     xml.destination file("${jacoco.reportsDir}/all-tests/jacocoAllTestReport.xml")
//     //     html.enabled true
//     //     html.destination(file("${jacoco.reportsDir}/all-tests/html"))
//     // }
// }