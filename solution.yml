trigger: 
  branches:
    include:
    - '*'
  tags:
    include:
    - '*SNAPSHOT*'
    - '*RELEASE*'
    - '*RC*'  
  paths:
    exclude:
    - '*.md'
    - 'img/*'
    - 'charts/*'

resources:
- repo: self

pool:
  name: agents2

variables:

  dockerRegistryServiceConnection: 'spreg'
  imageRepository: 'spring/spring-petclinic-monolith'
  containerRegistry: 'spreg.azurecr.io'
  dockerfilePath: '**/Dockerfile'
  tag: '$(Build.BuildId)'
  imagePullSecret: 'azurespringacr1580782c-auth'
  gituserEmail: "andrew.min1@outlook.com"
  gituserName: "Azure Pipelines"

  
stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    displayName: Build      
    steps:
    - checkout: self
      persistCredentials: 'true'
    
    - task: Gradle@3
      inputs:       
        gradleWrapperFile: 'gradlew'
        tasks: 'build'
        publishJUnitResults: true        
        testResultsFiles: '**/TEST-*.xml'
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: 1.17
        
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(build.sourceBranchName)  
    
    - task: Bash@3    
      displayName: 'Update version to Helm Charts'
      inputs: 
        targetType: inline
        script: |
          sed -i 's/tag:.*/tag: $(build.sourceBranchName)/g' charts/*/values*.yaml
          sed -i 's/appVersion:.*/appVersion: $(build.sourceBranchName)/g' charts/*/Chart.yaml
    
    - script: |
        git config --global user.email $(gituserEmail)
        git config --global user.name $(gituserName)
        git pull origin main
        git add charts/*
        git commit -m "version $(build.sourceBranchName) to Charts"
        git push origin HEAD:main
      displayName: 'Commit for GitOps'
      workingDirectory: $(build.SourcesDirectory)

    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: 'charts'
        artifact: charts

- stage: Deploy
  displayName: Deploy Snapshot to Dev environment
  dependsOn: Build
  # condition: contains(variables['build.sourceBranch'], 'SNAPSHOT')
  jobs:
  - deployment: Deploy
    displayName: Deploy
    environment: 'develop.spring'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: HelmDeploy@0
            inputs:
              connectionType: 'Kubernetes Service Connection'
              kubernetesServiceConnection: 'spring-spring-1700457413111'
              namespace: 'spring'
              command: upgrade
              chartType: Name
              chartName: '$(Pipeline.Workspace)/charts/petclinic'
              overrideFiles: '$(Pipeline.Workspace)/charts/petclinic/values-stage.yaml'
              releaseName: 'petclinic-dev'
              arguments: '--create-namespace'

- stage: rollback
  displayName: Rollback
  dependsOn: Deploy
  # condition: contains(variables['build.sourceBranch'], 'SNAPSHOT')
  jobs:
  - deployment: Rollback
    displayName: Rollback
    environment: 'dev.spring-pets'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: HelmDeploy@0
            inputs:
              connectionType: 'Kubernetes Service Connection'
              kubernetesServiceConnection: 'dev-spring-pets-1698724967311'
              namespace: 'spring-pets'
              command: rollback
              arguments: 'petclinic-dev 0'
    