# Deploy to Azure Kubernetes Service
# Build and push image to Azure Container Registry; Deploy to Azure Kubernetes Service
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker
trigger: 
  branches:
    include:
    - '*'
  tags:
    include:
    - 'SNAPSHOT'
    - 'RELEASE'
    - 'RC'  
  paths:
    exclude:
    - '*.md'
    - 'img/*'

resources:
- repo: self

pool:
  name: agents2

variables:

  # Container registry service connection established during pipeline creation
  # dockerRegistryServiceConnection: '<your-registry-connection>'
  # imageRepository: '<your-project(imagename)>'
  # containerRegistry: '<your-registry>.azurecr.io'

  dockerRegistryServiceConnection: 'spreg'
  imageRepository: 'petclinic/spring-petclinic-monolith'
  containerRegistry: 'spreg.azurecr.io'
  dockerfilePath: '**/Dockerfile'
  tag: '$(Build.BuildId)'
  imagePullSecret: 'azurespringacr1580782c-auth'
  # Maven Caching
  MAVEN_CACHE_FOLDER: $(Pipeline.Workspace)/.m2/repository
  MAVEN_OPTS: '-Dmaven.repo.local=$(MAVEN_CACHE_FOLDER)'
  # Agent VM image name
  # vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build stage
  jobs:
  - job: Build
    displayName: Build
      
    steps:
    - task: Gradle@3
      inputs:       
        gradleWrapperFile: 'gradlew'
        tasks: 'build'
        publishJUnitResults: true
        testResultsFiles: '**/TEST-*.xml'
        tasks: 'build -x test'
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: 1.11
        codeCoverageTool: 'jacoco'
        codeCoverageClassFilesDirectories:  'target/classes, target/testClasses'
        codeCoverageSourceDirectories: 'src/main/java, src/test/java'
    
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(build.sourceBranchName)  
    
    - task: Bash@3    
      inputs: 
        targetType: inline
        script: |
          sed -i 's/tag:.*/tag: $(build.sourceBranchName)/g' charts/*/values*.yaml
          sed -i 's/appVersion:.*/appVersion: $(build.sourceBranchName)/g' charts/*/Chart.yaml

    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: 'charts'
        artifact: charts

- stage: Deploy
  displayName: Deploy Snapshot to Dev environment
  dependsOn: Build
  # condition: contains(variables['build.sourceBranch'], 'SNAPSHOT')
  jobs:
  - deployment: Deploy
    displayName: Deploy
    environment: 'dev.monolith'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: HelmDeploy@0
            inputs:
              connectionType: 'Kubernetes Service Connection'
              kubernetesServiceConnection: 'dev-monolith-1697527441977'
              namespace: 'monolith'
              command: upgrade
              chartType: Name
              chartName: '$(Pipeline.Workspace)/charts/petclinic'
              # valueFile: '$(Pipeline.Workspace)/charts/petclinic/values.yaml'
              overrideFiles: '$(Pipeline.Workspace)/charts/petclinic/values-stage.yaml'
              releaseName: 'petclinic-dev'
              # arguments: '--create-namespace'